# Dependabot Auto-Merge Workflow
# Automatically merges Dependabot PRs that pass CI checks
# This enables near-direct commits to main branch for dependency updates

name: Dependabot Auto-Merge

on:
  # Trigger on pull request events from Dependabot
  pull_request_target:
    types:
      - opened
      - synchronize
      - reopened
      - labeled

  # Trigger when check runs complete
  check_run:
    types:
      - completed

  # Trigger when workflow runs complete
  workflow_run:
    workflows:
      - "CI/CD Pipeline"  # Match your main CI workflow name
      - "CodeQL"
    types:
      - completed

permissions:
  contents: write
  pull-requests: write
  checks: read
  statuses: read

jobs:
  # ===========================================================================
  # Auto-approve Dependabot PRs
  # ===========================================================================
  auto-approve:
    name: Auto-approve Dependabot PRs
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]'
    
    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v2
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      
      - name: Auto-approve PR
        if: |
          steps.metadata.outputs.update-type == 'version-update:semver-patch' ||
          steps.metadata.outputs.update-type == 'version-update:semver-minor'
        run: |
          gh pr review --approve "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # ===========================================================================
  # Auto-merge Dependabot PRs
  # ===========================================================================
  auto-merge:
    name: Auto-merge Dependabot PRs
    runs-on: ubuntu-latest
    needs: auto-approve
    if: github.actor == 'dependabot[bot]' && github.event_name == 'pull_request_target'
    
    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v2
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      
      - name: Enable auto-merge for patch and minor updates
        if: |
          steps.metadata.outputs.update-type == 'version-update:semver-patch' ||
          steps.metadata.outputs.update-type == 'version-update:semver-minor'
        run: |
          gh pr merge --auto --squash "$PR_URL"
          echo "✅ Auto-merge enabled. PR will merge automatically when all required checks pass."
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Label for manual review (major updates)
        if: steps.metadata.outputs.update-type == 'version-update:semver-major'
        run: |
          gh pr edit "$PR_URL" --add-label "manual-review-required"
          echo "⚠️ Major update detected. Manual review required."
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # ===========================================================================
  # Re-enable auto-merge after CI completes
  # ===========================================================================
  re-enable-auto-merge:
    name: Re-enable auto-merge after checks
    runs-on: ubuntu-latest
    if: |
      github.actor == 'dependabot[bot]' &&
      github.event_name == 'workflow_run' &&
      github.event.workflow_run.conclusion == 'success'
    
    steps:
      - name: Get Dependabot PR
        id: pr
        run: |
          # Find the PR associated with this workflow run
          PR_DATA=$(gh pr list \
            --repo ${{ github.repository }} \
            --state open \
            --author "dependabot[bot]" \
            --json number,headRefName,url \
            --jq '.[] | select(.headRefName == "${{ github.event.workflow_run.head_branch }}") | {number: .number, url: .url}')
          
          if [ -n "$PR_DATA" ]; then
            echo "pr_number=$(echo "$PR_DATA" | jq -r '.number')" >> $GITHUB_OUTPUT
            echo "pr_url=$(echo "$PR_DATA" | jq -r '.url')" >> $GITHUB_OUTPUT
            echo "Found PR: $(echo "$PR_DATA" | jq -r '.url')" 
          else
            echo "No matching PR found"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Re-enable auto-merge
        if: steps.pr.outputs.pr_number != ''
        run: |
          gh pr merge --auto --squash "${{ steps.pr.outputs.pr_url }}"
          echo "✅ Auto-merge re-enabled after CI completion"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # ===========================================================================
  # Notification for failed merges
  # ===========================================================================
  notify-on-failure:
    name: Notify on merge failure
    runs-on: ubuntu-latest
    needs: [auto-merge]
    if: failure() && github.actor == 'dependabot[bot]'
    
    steps:
      - name: Comment on PR
        run: |
          gh pr comment "$PR_URL" --body "⚠️ Auto-merge failed. Manual review required."
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

# =============================================================================
# CONFIGURATION NOTES
# =============================================================================
#
# This workflow provides three levels of automation:
#
# 1. **Auto-approve**: Automatically approves patch and minor updates
# 2. **Auto-merge**: Merges PRs after CI passes
# 3. **Direct-merge**: Fast-tracks patch updates
#
# Merge Strategy:
# - Patch updates: Auto-merge immediately after CI passes
# - Minor updates: Auto-merge after CI passes
# - Major updates: Require manual review (labeled for attention)
#
# Safety Features:
# - Waits for CI checks to complete
# - Uses squash merge to keep history clean
# - Labels major updates for manual review
# - Notifies on failures
#
# Requirements:
# - Repository setting "Allow auto-merge" must be enabled
# - GITHUB_TOKEN has sufficient permissions
# - CI workflow must be named correctly (currently "CI/CD Pipeline")
#
# =============================================================================
