# Dependabot Auto-Merge Workflow
# Automatically merges Dependabot PRs that pass CI checks
# This enables near-direct commits to main branch for dependency updates

name: Dependabot Auto-Merge

on:
  # Trigger on pull request events from Dependabot
  pull_request_target:
    types:
      - opened
      - synchronize
      - reopened
      - labeled

  # Trigger when check runs complete
  check_run:
    types:
      - completed

  # Trigger when workflow runs complete
  workflow_run:
    workflows:
      - "CI/CD Pipeline"  # Match your main CI workflow name
      - "CodeQL"
    types:
      - completed

permissions:
  contents: write
  pull-requests: write
  checks: read
  statuses: read

jobs:
  # ===========================================================================
  # Auto-approve Dependabot PRs
  # ===========================================================================
  auto-approve:
    name: Auto-approve Dependabot PRs
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]' && github.event_name == 'pull_request_target'
    
    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v2
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      
      - name: Auto-approve PR
        if: |
          steps.metadata.outputs.update-type == 'version-update:semver-patch' ||
          steps.metadata.outputs.update-type == 'version-update:semver-minor'
        run: |
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/reviews" \
            -d '{"event":"APPROVE"}'
          echo "✅ PR approved"

  # ===========================================================================
  # Auto-merge Dependabot PRs
  # ===========================================================================
  auto-merge:
    name: Auto-merge Dependabot PRs
    runs-on: ubuntu-latest
    needs: auto-approve
    if: github.actor == 'dependabot[bot]' && github.event_name == 'pull_request_target'
    
    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v2
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      
      - name: Enable auto-merge for patch and minor updates
        if: |
          steps.metadata.outputs.update-type == 'version-update:semver-patch' ||
          steps.metadata.outputs.update-type == 'version-update:semver-minor'
        run: |
          # Enable auto-merge using GraphQL API
          PR_NODE_ID=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}" \
            | jq -r '.node_id')
          
          curl -X POST \
            -H "Authorization: bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            https://api.github.com/graphql \
            -d '{"query":"mutation {enablePullRequestAutoMerge(input:{pullRequestId:\"'$PR_NODE_ID'\",mergeMethod:SQUASH}){pullRequest{autoMergeRequest{enabledAt}}}}"}'
          
          echo "✅ Auto-merge enabled. PR will merge automatically when all required checks pass."
      
      - name: Label for manual review (major updates)
        if: steps.metadata.outputs.update-type == 'version-update:semver-major'
        run: |
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/labels" \
            -d '{"labels":["manual-review-required"]}'
          echo "⚠️ Major update detected. Manual review required."

  # ===========================================================================
  # Re-enable auto-merge after CI completes
  # ===========================================================================
  merge-after-checks:
    name: Merge after all checks pass
    runs-on: ubuntu-latest
    if: |
      github.actor == 'dependabot[bot]' &&
      github.event_name == 'check_run' &&
      github.event.check_run.conclusion == 'success'
    
    steps:
      - name: Find associated PR
        id: find-pr
        run: |
          PR_NUMBER=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/commits/${{ github.event.check_run.head_sha }}/pulls" \
            | jq -r '.[0].number')
          
          if [ "$PR_NUMBER" != "null" ] && [ -n "$PR_NUMBER" ]; then
            echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT
            echo "Found PR #$PR_NUMBER"
          else
            echo "No PR found for this commit"
          fi
      
      - name: Check if all checks passed
        if: steps.find-pr.outputs.pr_number != ''
        id: check-status
        run: |
          PR_NUMBER="${{ steps.find-pr.outputs.pr_number }}"
          
          # Get PR mergeable state
          PR_DATA=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER")
          
          MERGEABLE=$(echo "$PR_DATA" | jq -r '.mergeable')
          echo "mergeable=$MERGEABLE" >> $GITHUB_OUTPUT
          echo "PR mergeable status: $MERGEABLE"
      
      - name: Merge PR
        if: steps.check-status.outputs.mergeable == 'true'
        run: |
          PR_NUMBER="${{ steps.find-pr.outputs.pr_number }}"
          
          curl -X PUT \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER/merge" \
            -d '{"merge_method":"squash"}'
          
          echo "✅ PR #$PR_NUMBER merged successfully"

  # ===========================================================================
  # Notification for failed merges
  # ===========================================================================
  notify-on-failure:
    name: Notify on merge failure
    runs-on: ubuntu-latest
    needs: [auto-merge]
    if: failure() && github.actor == 'dependabot[bot]'
    
    steps:
      - name: Comment on PR
        run: |
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments" \
            -d '{"body":"⚠️ Auto-merge failed. Manual review required."}'
          echo "Comment posted"

# =============================================================================
# CONFIGURATION NOTES
# =============================================================================
#
# This workflow provides three levels of automation:
#
# 1. **Auto-approve**: Automatically approves patch and minor updates
# 2. **Auto-merge**: Merges PRs after CI passes
# 3. **Direct-merge**: Fast-tracks patch updates
#
# Merge Strategy:
# - Patch updates: Auto-merge immediately after CI passes
# - Minor updates: Auto-merge after CI passes
# - Major updates: Require manual review (labeled for attention)
#
# Safety Features:
# - Waits for CI checks to complete
# - Uses squash merge to keep history clean
# - Labels major updates for manual review
# - Notifies on failures
#
# Requirements:
# - Repository setting "Allow auto-merge" must be enabled
# - GITHUB_TOKEN has sufficient permissions
# - CI workflow must be named correctly (currently "CI/CD Pipeline")
#
# =============================================================================
