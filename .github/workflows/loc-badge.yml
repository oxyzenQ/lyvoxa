name: LOC Badge

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'Cargo.toml'
      - 'Cargo.lock'
      - 'README.md'
      - 'docs/**'
      - '.github/workflows/loc-badge.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'Cargo.toml'
      - 'Cargo.lock'
      - 'README.md'
      - 'docs/**'
      - '.github/workflows/loc-badge.yml'
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 1' # Weekly on Mondays
  workflow_run:
    workflows: ["CI/CD Pipeline"]
    types: [completed]

permissions:
  contents: write

jobs:
  loc:
    runs-on: ubuntu-latest
    if: |
      (github.event_name != 'workflow_run' && github.actor != 'github-actions[bot]') ||
      (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'main')
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.head_sha || github.sha }}

      - name: Set up Rust (for tokei)
        uses: dtolnay/rust-toolchain@stable

      - name: Install tokei
        run: cargo install --locked tokei

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Generate LOC badge JSON
        run: |
          set -euo pipefail
          mkdir -p docs/badges
          LOC=$(tokei -o json --exclude target,.git | jq -r '.Total.code // ([.[] | select(type=="object" and has("total")) | .total.code] | add) // 0')
          printf '{"schemaVersion":1,"label":"lines of code","message":"%s","color":"informational","cacheSeconds":60}\n' "$LOC" > docs/badges/loc.json

      - name: Debug summary
        run: |
          echo "## LOC Badge Debug" >> "$GITHUB_STEP_SUMMARY"
          echo "- Event: $GITHUB_EVENT_NAME" >> "$GITHUB_STEP_SUMMARY"
          echo "- Ref: $GITHUB_REF" >> "$GITHUB_STEP_SUMMARY"
          echo "- SHA: $GITHUB_SHA" >> "$GITHUB_STEP_SUMMARY"
          echo "- LOC file: docs/badges/loc.json" >> "$GITHUB_STEP_SUMMARY"

      - name: Commit badge
        if: github.event_name != 'pull_request'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          if git diff --quiet -- docs/badges/loc.json; then
            echo "No changes in LOC badge"
            exit 0
          fi
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add docs/badges/loc.json
          git commit -m "docs(badge): update LOC badge [skip ci]"
          git push

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
